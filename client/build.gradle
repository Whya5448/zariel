plugins {
    id 'org.beryx.jlink'
    id 'org.jetbrains.kotlin.plugin.spring'
    id 'org.springframework.boot'
}
apply plugin: 'io.spring.dependency-management'
dependencies {
    configurations.all {
        exclude group: "commons-logging", module: "commons-logging"
        exclude group: "com.google.code.findbugs", module: "jsr305"
    }

    implementation project(':library')
    implementation "com.fasterxml.jackson.core:jackson-databind:${jackson}"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:${jackson}"
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.springframework.boot:spring-boot-starter:2.1.4.RELEASE'
}

def sImageName = "dc-eso-client-$version"
def sModuleName = 'org.metalscraps.eso.lang.client'
def sMainClass = 'org.metalscraps.eso.lang.client.ClientApplication'
mainClassName = "${sModuleName}/${sMainClass}"
springBoot { mainClassName = sMainClass }
jar {
    manifest { attributes 'Implementation-Title': sModuleName, 'Main-Class': sMainClass }
    enabled = true
}
jlink {
    moduleName = sModuleName
    mergedModuleName = "${sModuleName}.merged.module"
    imageDir = file("$buildDir/../../javaImages/")
    imageName = sImageName
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    //options = []
    imageZip = file("$buildDir/${sImageName}-${version}.zip")
    launcher {
        name = 'launch'
        jvmArgs = ['-Dlogback.configurationFile=./logback.xml',
                     "--add-reads ${sModuleName}.merged.module=${sModuleName}",
                     "-cp", "config/"
        ]
    }

    mergedModule {
        requires 'java.management'
        requires 'java.naming'
        requires 'java.logging'
        requires 'jdk.httpserver'
        requires 'java.scripting'
        requires 'java.sql'
        requires 'java.prefs'
        requires 'java.rmi'
        requires 'java.xml'
        requires 'java.desktop'
        requires 'java.instrument'
        requires 'jdk.unsupported'
        requires 'jdk.crypto.ec'

        uses 'kotlin.reflect.jvm.internal.impl.util.ModuleVisibilityHelper'
        uses 'kotlin.reflect.jvm.internal.impl.builtins.BuiltInsLoader'
        uses 'kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition'
        uses 'java.nio.file.spi.FileSystemProvider'

        provides 'com.fasterxml.jackson.core.JsonFactory' with 'com.fasterxml.jackson.core.JsonFactory'
        provides 'org.apache.commons.logging.LogFactory' with 'org.apache.commons.logging.LogFactoryService'
        provides 'kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition' with 'kotlin.reflect.jvm.internal.impl.load.java.ErasedOverridabilityCondition',
                'kotlin.reflect.jvm.internal.impl.load.java.FieldOverridabilityCondition',
                'kotlin.reflect.jvm.internal.impl.load.java.JavaIncompatibilityRulesOverridabilityCondition'
        provides 'kotlin.reflect.jvm.internal.impl.builtins.BuiltInsLoader' with 'kotlin.reflect.jvm.internal.impl.serialization.deserialization.builtins.BuiltInsLoaderImpl'
        provides 'com.fasterxml.jackson.databind.Module' with 'com.fasterxml.jackson.module.kotlin.KotlinModule'
        provides 'com.fasterxml.jackson.core.ObjectCodec' with 'com.fasterxml.jackson.databind.ObjectMapper'
    }

}

tasks.jlink.doLast {
    copy {
        from('src/main/resources')
        into("$buildDir/${sImageName}/bin/config")
    }

    copy {
        from "$buildDir/classes/kotlin/main/org/metalscraps/eso/lang/client"
        into "$buildDir/${sImageName}/bin/config/org/metalscraps/eso/lang/client/"
    }
}