plugins {
    id 'org.beryx.jlink'
    id 'org.jetbrains.kotlin.plugin.spring'
    id 'org.springframework.boot'
}
apply plugin: 'io.spring.dependency-management'
dependencies {
    configurations.all {
        exclude group: "commons-logging", module: "commons-logging"
    }

    compile project(':library')
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.springframework.boot:spring-boot-starter:2.1.4.RELEASE'
}

def sImageName = "dc-eso-server-$version"
def sModuleName = 'org.metalscraps.eso.lang.server'
def sMergedModuleName = "${sModuleName}.merged.module"
def sMainClass = 'org.metalscraps.eso.lang.server.ServerApplication'
def launcherName = 'launch'
def platformName = 'alpine'
mainClassName = "${sModuleName}/${sMainClass}"
springBoot { mainClassName = sMainClass }
jar {
    manifest { attributes 'Implementation-Title': sModuleName, 'Main-Class': sMainClass }
    enabled = true
}
jlink {
    mergedModuleName = "${sMergedModuleName}"
    imageName = sImageName
    options = ['--compress', '2', '--no-header-files', '--no-man-pages']
    //options = []
    targetPlatform(platformName, 'C:/Program Files/Zulu/zulu12.2.3-ca-jdk12.0.1-linux_musl_x64')
    launcher {
        name = launcherName
        jvmArgs = ["-XX:+PrintCommandLineFlags", "-verbose:gc",
                   '-Xmx288M', '-Dlogback.configurationFile=./logback.xml',
                   "--add-reads ${sModuleName}.merged.module=${sModuleName}",
                   "-cp", "config/"]
    }

    mergedModule {
        requires 'java.management'
        requires 'java.naming'
        requires 'java.logging'
        requires 'jdk.httpserver'
        requires 'java.scripting'
        requires 'java.sql'
        requires 'java.prefs'
        requires 'java.rmi'
        requires 'java.xml'
        requires 'java.desktop'
        requires 'java.instrument'
        requires 'jdk.unsupported'
        requires 'jdk.crypto.ec'

        uses 'kotlin.reflect.jvm.internal.impl.util.ModuleVisibilityHelper'
        uses 'kotlin.reflect.jvm.internal.impl.builtins.BuiltInsLoader'
        uses 'kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition'
        uses 'java.nio.file.spi.FileSystemProvider'
        provides 'com.fasterxml.jackson.core.JsonFactory' with 'com.fasterxml.jackson.core.JsonFactory'
        provides 'org.apache.commons.logging.LogFactory' with 'org.apache.commons.logging.LogFactoryService'
        provides 'kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition' with 'kotlin.reflect.jvm.internal.impl.load.java.ErasedOverridabilityCondition',
                'kotlin.reflect.jvm.internal.impl.load.java.FieldOverridabilityCondition',
                'kotlin.reflect.jvm.internal.impl.load.java.JavaIncompatibilityRulesOverridabilityCondition'
        provides 'kotlin.reflect.jvm.internal.impl.builtins.BuiltInsLoader' with 'kotlin.reflect.jvm.internal.impl.serialization.deserialization.builtins.BuiltInsLoaderImpl'
        provides 'com.fasterxml.jackson.core.ObjectCodec' with 'com.fasterxml.jackson.databind.ObjectMapper'
    }

}
tasks.jlink.doLast {
    copy {
        from('src/main/resources')
        into("$buildDir/${sImageName}/${launcherName}-${platformName}/bin/config")
    }

    copy {
        from "$buildDir/classes/kotlin/main/org/metalscraps/eso/lang/server"
        into "$buildDir/${sImageName}/${launcherName}-${platformName}/bin/config/org/metalscraps/eso/lang/server/"
    }

}
bootRun {
    //suspend => 접속전까지 멈출지
    //jvmArgs=["-Xmx2G", "-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:5005"]
    jvmArgs=["-Xmx288M", "-XX:+PrintCommandLineFlags", "-verbose:gc"]
}